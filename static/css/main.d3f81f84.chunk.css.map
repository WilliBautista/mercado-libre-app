{"version":3,"sources":["webpack://src/assets/libraries/sass-flexbox-grid/_grid.scss","webpack://src/assets/libraries/sass-flexbox-grid/mixins/_grid-mixins.scss","webpack://src/assets/libraries/sass-flexbox-grid/variables/_grid-variables.scss","webpack://src/assets/libraries/sass-flexbox-grid/_visibility.scss","webpack://src/styles/base/_fonts.scss","webpack://src/styles/base/_mixins.scss","webpack://src/styles/_global.scss","webpack://src/styles/layout/_header.scss","webpack://src/styles/layout/_main.scss","webpack://src/styles/base/_variables.scss","webpack://src/styles/components/_inputs.scss","webpack://src/styles/components/_buttons.scss","webpack://src/styles/components/_forms.scss","webpack://src/styles/components/_slider.scss","webpack://src/styles/components/_breadcrumbs.scss","webpack://src/styles/components/_skeleton.scss","webpack://src/styles/pages/_frontal.scss","webpack://src/styles/pages/_results.scss"],"names":[],"mappings":"AAIA,KCHE,qBAAA,CACA,aAAA,CACA,UAAA,CAGA,YAAA,CACA,aAAA,CACA,kBAAA,CACA,cAAA,CDDF,aCUE,0BAAA,CDNF,oBCUE,sBAAA,CDNF,iBCUE,qBAAA,CDNF,KC2BI,qBAAA,CACA,WAAA,CACA,YAAA,CACA,cAAA,CACA,eC3CK,CFgBT,aCME,6BAAA,CDFF,OACE,QAAA,CAGF,MACE,OAAA,CAGF,aACE,qBAAA,CAGF,WACE,mBAAA,CAGF,cACE,iBAAA,CAGF,gBACE,mBAAA,CAGF,eACI,kBAAA,CAKF,QAEE,WAAA,CACA,YAAA,CACA,cEtDK,CF0DL,kBAPA,qBAAA,CAIA,eEvDK,CF0DL,UAEE,wBAAA,CACA,uBE7DG,CFgEL,iBACE,yBAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,WACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,kBACE,0BAAA,CAPF,WACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,kBACE,0BAAA,CAPF,WACE,qBAAA,CACA,eAAA,CACA,cAAA,CACA,eE9DG,CFgEL,kBACE,gBAAA,CAGJ,cACE,0BAAA,CAEF,eACE,sBAAA,CAEF,YACE,wBAAA,CAEF,YACE,sBAAA,CAEF,eACE,kBAAA,CAEF,eACE,oBAAA,CAEF,eACE,4BAAA,CAEF,gBACE,6BAAA,CAEF,UACE,QAAA,CAEF,SACE,OAAA,CAEF,uBACE,wBAAA,CAGF,wBACE,yBAAA,CASA,yCA9DF,QAEE,WAAA,CACA,YAAA,CACA,cEtDK,CF0DL,kBAPA,qBAAA,CAIA,eEvDK,CF0DL,UAEE,wBAAA,CACA,uBE7DG,CFgEL,iBACE,yBAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,WACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,kBACE,0BAAA,CAPF,WACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,kBACE,0BAAA,CAPF,WACE,qBAAA,CACA,eAAA,CACA,cAAA,CACA,eE9DG,CFgEL,kBACE,gBAAA,CAGJ,cACE,0BAAA,CAEF,eACE,sBAAA,CAEF,YACE,wBAAA,CAEF,YACE,sBAAA,CAEF,eACE,kBAAA,CAEF,eACE,oBAAA,CAEF,eACE,4BAAA,CAEF,gBACE,6BAAA,CAEF,UACE,QAAA,CAEF,SACE,OAAA,CAEF,uBACE,wBAAA,CAGF,wBACE,yBAAA,CAAA,CAaA,yCAlEF,QAEE,WAAA,CACA,YAAA,CACA,cEtDK,CF0DL,kBAPA,qBAAA,CAIA,eEvDK,CF0DL,UAEE,wBAAA,CACA,uBE7DG,CFgEL,iBACE,yBAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,WACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,kBACE,0BAAA,CAPF,WACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,kBACE,0BAAA,CAPF,WACE,qBAAA,CACA,eAAA,CACA,cAAA,CACA,eE9DG,CFgEL,kBACE,gBAAA,CAGJ,cACE,0BAAA,CAEF,eACE,sBAAA,CAEF,YACE,wBAAA,CAEF,YACE,sBAAA,CAEF,eACE,kBAAA,CAEF,eACE,oBAAA,CAEF,eACE,4BAAA,CAEF,gBACE,6BAAA,CAEF,UACE,QAAA,CAEF,SACE,OAAA,CAEF,uBACE,wBAAA,CAGF,wBACE,yBAAA,CAAA,CAiBA,yCAtEF,QAEE,WAAA,CACA,YAAA,CACA,cEtDK,CF0DL,kBAPA,qBAAA,CAIA,eEvDK,CF0DL,UAEE,wBAAA,CACA,uBE7DG,CFgEL,iBACE,yBAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,WACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,kBACE,0BAAA,CAPF,WACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,kBACE,0BAAA,CAPF,WACE,qBAAA,CACA,eAAA,CACA,cAAA,CACA,eE9DG,CFgEL,kBACE,gBAAA,CAGJ,cACE,0BAAA,CAEF,eACE,sBAAA,CAEF,YACE,wBAAA,CAEF,YACE,sBAAA,CAEF,eACE,kBAAA,CAEF,eACE,oBAAA,CAEF,eACE,4BAAA,CAEF,gBACE,6BAAA,CAEF,UACE,QAAA,CAEF,SACE,OAAA,CAEF,uBACE,wBAAA,CAGF,wBACE,yBAAA,CAAA,CAqBA,0CA1EF,QAEE,WAAA,CACA,YAAA,CACA,cEtDK,CF0DL,kBAPA,qBAAA,CAIA,eEvDK,CF0DL,UAEE,wBAAA,CACA,uBE7DG,CFgEL,iBACE,yBAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,iBACE,0BAAA,CAPF,UACE,qBAAA,CACA,cAAA,CACA,aAAA,CACA,eE9DG,CFgEL,iBACE,eAAA,CAPF,WACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,kBACE,0BAAA,CAPF,WACE,qBAAA,CACA,yBAAA,CACA,wBAAA,CACA,eE9DG,CFgEL,kBACE,0BAAA,CAPF,WACE,qBAAA,CACA,eAAA,CACA,cAAA,CACA,eE9DG,CFgEL,kBACE,gBAAA,CAGJ,cACE,0BAAA,CAEF,eACE,sBAAA,CAEF,YACE,wBAAA,CAEF,YACE,sBAAA,CAEF,eACE,kBAAA,CAEF,eACE,oBAAA,CAEF,eACE,4BAAA,CAEF,gBACE,6BAAA,CAEF,UACE,QAAA,CAEF,SACE,OAAA,CAEF,uBACE,wBAAA,CAGF,wBACE,yBAAA,CAAA,CA2BJ,eACI,iBAAA,CAGJ,eACI,SAAA,CG9IJ,MACE,uBAAA,CAGF,UAGE,sBAAA,CAGF,MACE,sBAAA,CAKA,SACE,uBAAA,CAEF,aAGE,sBAAA,CAEF,SACE,sBAAA,CASA,yCAlBF,cACE,uBAAA,CAEF,kBAGE,sBAAA,CAEF,cACE,sBAAA,CAAA,CAaA,yCAtBF,SACE,uBAAA,CAEF,aAGE,sBAAA,CAEF,SACE,sBAAA,CAAA,CAiBA,8DA1BF,cACE,uBAAA,CAEF,kBAGE,sBAAA,CAEF,cACE,sBAAA,CAAA,CAqBA,yCA9BF,SACE,uBAAA,CAEF,aAGE,sBAAA,CAEF,SACE,sBAAA,CAAA,CAyBA,8DAlCF,cACE,uBAAA,CAEF,kBAGE,sBAAA,CAEF,cACE,sBAAA,CAAA,CA6BA,yCAtCF,SACE,uBAAA,CAEF,aAGE,sBAAA,CAEF,SACE,sBAAA,CAAA,CAiCA,+DA1CF,cACE,uBAAA,CAEF,kBAGE,sBAAA,CAEF,cACE,sBAAA,CAAA,CAqCA,0CA9CF,SACE,uBAAA,CAEF,aAGE,sBAAA,CAEF,SACE,sBAAA,CAAA,CCpBJ,WACE,kCAAA,CACA,0gBAaA,CAAA,iBAAA,CAAA,eAAA,CAAA,iBAAA,CAAA,WAAA,yCAAA,CAAA,6iBCAA,CAAA,iBCeA,CAAA,eAGF,CAAA,iBAEE,CAAA,MAIA,qBAGF,CAAA,oCDkDE,MACA,qBACA,CAAA,CAAA,EAAA,qBACA,CAAA,QAAA,CAAA,SAAA,CAAA,UACA,gBAAA,CAAA,cACA,CAAA,MAAA,6BACA,CAAA,cExGF,CACE,KAAA,eAAA,CAAA,UAEA,CAAA,6DFGA,CAAA,cEHA,CAAA,+BAQA,CAAA,gBACE,CAAA,WAEA,UAAA,CAAA,WFOF,CAAA,aACA,CAAA,gBAhBA,CAAA,gBAAA,UEQE,CAAA,WAAA,CAAA,cAII,CAAA,MAAA,eCfN,CAAA,EAAA,oBACA,CAAA,iBAEA,2BAEE,CAAA,mBAGF,CAAA,qBACE,CAAA,yBACA,CCac,4BJJhB,CAAA,4BAyBA,CAAA,kBAAA,CAAA,QAAA,wBAEA,CAAA,mBACA,cACA,CAAA,oCAGA,mBAEA,cAAA,CAAA,CAAA,oBAAA,YAAA,CAAA,wBAAA,UAAA,CAAA,WACE,CAAA,oCAAA,wBAGF,WAAA,CAAA,CAAA,MACE,kBAGF,CAAA,gBAAA,CAAA,gBACE,iBA3DF,CAAA,iBAAA,CAAA,qBKDE,qBACA,CAAA,iBACA,CAAA,iBLgEF,UAAA,CAAA,WAAA,CAAA,uBAAA,CAAA,oBACA,CAAA,eACA,CAAA,QACA,CAAA,iBACA,CAAA,UACA,CAAA,aACA,CAAA,iBACA,CAAA,YAAA,CAAA,YACA,CAAA,4CAIA,UACA,CAAA,uCMzEA,UAAA,CAAA,8BACA,UAAA,CACA,mCN4EE,UAAA,CAAA,kCACA,UACA,CIpFM,oCJDR,iBMUE,WAKJ,CAAA,kBACE,CAAA,iBACA,CAAA,CAAA,KACA,uBCpBF,CAAA,oBACE,CAAA,eAEA,CAAA,kBPcA,CAAA,QACA,CAAA,iBObE,CAAA,cACA,CAAA,YAAA,CAAA,iBACA,CAAA,sBACA,CAAA,iBACA,CAAA,aACA,wBPRF,CAAA,UAAA,CAAA,iBOCA,CAAA,SPcA,CAAA,cACA,CAAA,+BADA,CAAA,WACA,CAAA,eQnBA,CAAA,mBAAA,wBAEE,CAAA,oBAAA,CAAA,UACA,CAAA,oCAEA,aAAA,WACE,CACA,CAAA,UAAA,kBACA,CAAA,YCXN,CAAA,sBACE,CAAA,aAEA,iBACE,CAAA,qBACA,UAGF,CAAA,WACE,CAAA,qBACA,CAAA,2BAGA,CAAA,wBAIA,CAAA,iBAAA,CAAA,aACE,CAAA,KAAA,CAAA,oCAAA,qBAAA,UAAA,CAAA,WAAA,CAAA,yBCfJ,UACE,CAAA,WAMF,CAAA,CAAA,sCCTA,YAAA,CACA,sBCCA,CAAA,kBACE,CAAA,0CAKA,URaU,CQZV,kBAAA,CAAA,sBAEA,CAAA,YAAA,kBACE,CAAA,kBAGF,YAAA,CAAA,cACE,CAAA,kBAGF,YZCF,CAAA,kBACA,CAAA,UYAI,CAAA,sBACA,YACA,CAAA,6BACA,2FAKE,CAIJ,uDAEE,UAEA,CAAA,QAAA,aAAA,CAAA,UAAA,CAAA,gBACE,oBZjCN,CAAA,aAAA,CAAA,oBYgCI,YAAA,CAAA,4BAII,CAAA,+BAGF,eAAA,CAAA,kCZvBN,UYyBQ,CAAA,2BAAA,WAAA,CAAA,YAAA,CAAA,qBACA,CAAA,iBACA,CAAA,sBACA,CAAA,gBAIJ,CAAA,+BZrBJ,WAAA,CAAA,YAAA,CAAA,YAAA,CAAA,kBIhBoB,CJiBpB,iCAGE,iBYmBI,CAAA,gBZlDN,CAAA,wCYgDI,gBAAA,CAAA,oCASA,wCACE,kBACA,CAAA,CZ3DN,4DYyDI,UAAA,CAAA,WAKI,CAAA,i4Cf5DD,CAAA,UAAA,CAAA,oBAAA,CAAA,gBAAA,CAAA,wCAAA,6DAAA,CAAA,kBAAA,CAAA,oBAAA,CAAA,eAAA,CAAA,oCAAA,wCAAA,SAAA,CAAA,CAAA,2CAAA,gBAAA,CAAA,aAAA,CAAA,oCAAA,2CAAA,QAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA,gBAAA,eAAA,CAAA,iBAAA,CAAA,oCAAA,gBAAA,cAAA,CAAA,CAAA,mDAAA,kBAAA,CAAA,oCAAA,wBAAA,qBAAA,CAAA,eAAA,CAAA,YAAA,CAAA,CAAA,sBAAA,6DAAA,CAAA,iBAAA,CAAA,mBAAA,CAAA,kBAAA,CAAA,uBAAA,2FAAA,CAAA,gBAAA,CAAA,kBAAA,CAAA,kBAAA,CAAA,uBAAA,kBAAA,CAAA,oBAAA,CAAA,kDAAA,6DAAA,CAAA,kBAAA,CAAA,2BAAA,iBAAA,CAAA,mBAAA,CAAA,oBAAA","file":"main.d3f81f84.chunk.css","sourcesContent":["// Creds to https://github.com/kristoferjoseph/flexboxgrid\n// No gutters\n// No text alignment with justified container classes (center-xs, for example)\n\n.row {\n  @include row();\n}\n\n.row.reverse {\n  @include row-reverse();\n}\n\n.row.natural-height {\n  @include row-natural-height();\n}\n\n.row.flex-column {\n  @include row-flex-column();\n}\n\n.col {\n  @include col();\n}\n\n.col.reverse {\n  @include col-reverse();\n}\n\n.first {\n  order: -1;\n}\n\n.last {\n  order: 1;\n}\n\n.align-start {\n  align-self: flex-start;\n}\n\n.align-end {\n  align-self: flex-end;\n}\n\n.align-center {\n  align-self: center;\n}\n\n.align-baseline {\n  align-self: baseline;\n}\n\n.align-stretch {\n    align-self: stretch;\n}\n\n// Mixin to run inside of for loop - creates col/breakpoint classes * Not for developer use *\n@mixin col-factory($thisPrefix) {\n  .col-#{$thisPrefix} {\n    box-sizing: border-box;\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n    padding: $gutter;\n  }\n  @for $i from 1 through $grid-columns {\n    .col-#{$thisPrefix}-#{$i} {\n      box-sizing: border-box;\n      flex-basis: 100% / $grid-columns * $i;\n      max-width: 100% / $grid-columns * $i;\n      padding: $gutter;\n    }\n    .col-#{$thisPrefix}-offset-#{$i} {\n      margin-left: 100% / $grid-columns * $i;\n    }\n  }\n  .row.start-#{$thisPrefix} {\n    justify-content: flex-start;\n  }\n  .row.center-#{$thisPrefix} {\n    justify-content: center;\n  }\n  .row.end-#{$thisPrefix} {\n    justify-content: flex-end;\n  }\n  .row.top-#{$thisPrefix} {\n    align-items: flex-start;\n  }\n  .row.middle-#{$thisPrefix} {\n    align-items: center;\n  }\n  .row.bottom-#{$thisPrefix} {\n    align-items: flex-end;\n  }\n  .row.around-#{$thisPrefix} {\n    justify-content: space-around;\n  }\n  .row.between-#{$thisPrefix} {\n    justify-content: space-between;\n  }\n  .first-#{$thisPrefix} {\n    order: -1;\n  }\n  .last-#{$thisPrefix} {\n    order: 1;\n  }\n  .col-no-gutter-left-#{$thisPrefix} {\n    padding-left: 0 !important;\n  }\n\n  .col-no-gutter-right-#{$thisPrefix} {\n    padding-right: 0 !important;\n  }\n} // Mixin to run inside of for loop - creates col/breakpoint classes\n\n@for $i from 1 through length($breakpoint-up-prefixes) {\n  $thisPrefix: nth($breakpoint-up-prefixes, $i);\n  @if $thisPrefix == \"xs\" {\n    @include col-factory($thisPrefix);\n  } @else if $thisPrefix == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include col-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include col-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include col-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include col-factory($thisPrefix);\n    }\n  }\n}\n\n.col-gutter-lr {\n    padding: 0 $gutter;\n}\n\n.col-no-gutter {\n    padding: 0;\n}\n","@mixin row($full-width: \"false\") {\n  box-sizing: border-box;\n  margin: 0 auto;\n  width: 100%;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  flex: 0 1 auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  // // Overrides flexbox's default behavior of making all children equal height\n  // align-items: flex-start; // If this was not in place it would require two classes to make a row full of unequal height columns aligned top, middle, bottom\n  @if type-of($content-well-max-width) == number and $content-well-max-width != 0 and $full-width == \"false\"{\n    max-width: $content-well-max-width;\n  }\n}\n\n@mixin row-reverse() {\n  flex-direction: row-reverse;\n}\n\n@mixin row-natural-height() {\n  align-items: flex-start;\n}\n\n@mixin row-flex-column() {\n  flex-direction: column;\n}\n\n@mixin col-reverse() {\n  flex-direction: column-reverse;\n}\n\n// Condition to run inside of the col mixin * not for developer use *\n@mixin col-condition($col-number) {\n  @if type-of($col-number) == number {\n    @if $col-number > $grid-columns or $col-number == 0 {\n      @warn \"Column number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n    } @else {\n      box-sizing: border-box;\n      flex-basis: 100% / $grid-columns * $col-number;\n      max-width: 100% / $grid-columns * $col-number;\n      padding: $gutter;\n    }\n  // If no col number is passed then arg is set to \"auto\" by default\n  // \"auto\" mode fills the horizontal space with evenly sized containers\n  } @else if $col-number == \"auto\" {\n    box-sizing: border-box;\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n    padding: $gutter;\n  } @else {\n    @warn \"Column number argument must either be the string 'auto' or a number greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n  }\n} // Condition to run inside of the col mixin * not for developer use *\n\n@mixin col($breakpoint: \"xs\", $col-number: \"auto\") {\n  // If no breakpoint is passed and a col number is just use the first arg as the col number and act like xs\n  @if type-of($breakpoint) == number {\n    $col-number: $breakpoint;\n    @include col-condition($col-number);\n  } @else if $breakpoint == \"xs\" {\n    @include col-condition($col-number);\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include col-condition($col-number);\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include col-condition($col-number);\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include col-condition($col-number);\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include col-condition($col-number);\n    }\n  } @else {\n    @warn \"col mixin requires one of the existing breakpoint prefixes (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n// Condition to run inside of the col-offset mixin * not for developer use *\n@mixin col-offset-condition($offset-number) {\n  @if type-of($offset-number) != number {\n    @warn \"Column offset number must be a number (only arg or second arg in the col mixin)\";\n  } @else if $offset-number == 0 {\n    @warn \"Column offset number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n  } @else if $offset-number > $grid-columns {\n    @warn \"Column offset number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n  } @else {\n    margin-left: 100% / $grid-columns * $offset-number;\n  }\n} // Condition to run inside of the col-offset mixin * not for developer use *\n\n@mixin col-offset($breakpoint: \"xs\", $offset-number: 0) {\n  // If no breakpoint is passed and a col number is just use the first arg as the col number and act like xs\n  @if type-of($breakpoint) == number {\n    $offset-number: $breakpoint;\n    @include col-offset-condition($offset-number);\n  } @else if $breakpoint == \"xs\" {\n    @include col-offset-condition($offset-number);\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else {\n    @warn \"col mixin requires one of the existing breakpoint prefixes (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin start($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: flex-start;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: flex-start;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: flex-start;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: flex-start;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: flex-start;\n    }\n  } @else {\n    @warn \"start mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin center($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: center;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: center;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: center;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: center;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: center;\n    }\n  } @else {\n    @warn \"center mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin end($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: flex-end;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: flex-end;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: flex-end;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: flex-end;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: flex-end;\n    }\n  } @else {\n    @warn \"end mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin top($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    align-items: flex-start;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      align-items: flex-start;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      align-items: flex-start;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      align-items: flex-start;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      align-items: flex-start;\n    }\n  } @else {\n    @warn \"top mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin middle($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    align-items: center;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      align-items: center;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      align-items: center;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      align-items: center;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      align-items: center;\n    }\n  } @else {\n    @warn \"middle mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin bottom($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    align-items: flex-end;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      align-items: flex-end;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      align-items: flex-end;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      align-items: flex-end;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      align-items: flex-end;\n    }\n  } @else {\n    @warn \"bottom mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin around($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: space-around;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: space-around;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: space-around;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: space-around;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: space-around;\n    }\n  } @else {\n    @warn \"around mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin between($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: space-between;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: space-between;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: space-between;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: space-between;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: space-between;\n    }\n  } @else {\n    @warn \"between mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin first($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    order: -1;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      order: -1;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      order: -1;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      order: -1;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      order: -1;\n    }\n  } @else {\n    @warn \"first mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin last($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    order: 1;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      order: 1;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      order: 1;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      order: 1;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      order: 1;\n    }\n  } @else {\n    @warn \"last mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n","// Grid\n$grid-columns: 12 !default; // Set number of columns in the grid\n\n$xs-max: 40rem !default; // Set xs breakpoint's max width\n$sm-max: 64rem !default; // Set sm breakpoint's max width\n$md-max: 90rem !default; // Set md breakpoint's max width\n$lg-max: 120rem !default; // Set lg breakpoint's max width\n\n$gutter: 0.688rem !default; // Set gutter size\n\n$content-well-max-width: \"none\" !default; // Set the max-width of the content well\n\n$sm-start: ($xs-max + 1); // Generate sm breakpoint's min width\n$md-start: ($sm-max + 1); // Generate md breakpoint's min width\n$lg-start: ($md-max + 1); // Generate lg breakpoint's min width\n$xl-start: ($lg-max + 1); // Generate xl breakpoint's min width\n\n// Breakpoints\n// Create breakpoint range statements to be used in media queries\n$breakpoint-xs-only: \"only screen and (max-width: #{$xs-max})\"; // 0 -> xs-max range\n$breakpoint-sm-up: \"only screen and (min-width: #{$sm-start})\"; // sm-start -> up range\n$breakpoint-sm-only: \"only screen and (min-width: #{$sm-start}) and (max-width: #{$sm-max})\"; // sm-start -> sm-max range\n$breakpoint-md-up: \"only screen and (min-width: #{$md-start})\"; // md-start -> up range\n$breakpoint-md-only: \"only screen and (min-width: #{$md-start}) and (max-width: #{$md-max})\"; // md-start -> md-max range\n$breakpoint-lg-up: \"only screen and (min-width: #{$lg-start})\"; // lg-start -> up range\n$breakpoint-lg-only: \"only screen and (min-width: #{$lg-start}) and (max-width: #{$lg-max})\"; // lg-start -> lg-max range\n$breakpoint-xl-up: \"only screen and (min-width: #{$xl-start})\"; // xl-start -> up range\n\n$breakpoints-all: ($breakpoint-xs-only, $breakpoint-sm-up, $breakpoint-sm-only, $breakpoint-md-up, $breakpoint-md-only, $breakpoint-lg-up, $breakpoint-lg-only, $breakpoint-xl-up);\n$breakpoint-ups: ($breakpoint-sm-up, $breakpoint-md-up, $breakpoint-lg-up, $breakpoint-xl-up);\n$breakpoint-all-prefixes: (\"xs\", \"xs-only\", \"sm\", \"sm-only\", \"md\", \"md-only\", \"lg\", \"lg-only\", \"xl\");\n$breakpoint-up-prefixes: (\"xs\", \"sm\", \"md\", \"lg\", \"xl\");\n","\n.show {\n  display: block !important;\n}\n\n.row.show {\n  display: -webkit-flex !important;\n  display: -ms-flexbox !important;\n  display: flex !important;\n}\n\n.hide {\n  display: none !important;\n}\n\n// Mixin to run inside of for loop - creates visibility classes * Not for developer use *\n@mixin vis-factory($thisPrefix) {\n  .show-#{$thisPrefix} {\n    display: block !important;\n  }\n  .row.show-#{$thisPrefix} {\n    display: -webkit-flex !important;\n    display: -ms-flexbox !important;\n    display: flex !important;\n  }\n  .hide-#{$thisPrefix} {\n    display: none !important;\n  }\n} // Mixin to run inside of for loop - creates visibility classes * Not for developer use *\n\n@for $i from 1 through length($breakpoint-all-prefixes) {\n  $thisPrefix: nth($breakpoint-all-prefixes, $i);\n  @if $thisPrefix == \"xs\" {\n    @include vis-factory($thisPrefix);\n  } @else if $thisPrefix == \"xs-only\" {\n    @media #{$breakpoint-xs-only} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"sm-only\" {\n    @media #{$breakpoint-sm-only} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"md-only\" {\n    @media #{$breakpoint-md-only} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"lg-only\" {\n    @media #{$breakpoint-lg-only} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include vis-factory($thisPrefix);\n    }\n  }\n}\n","///\n/// Fonts\n\n$fonts : '../../assets/fonts/';\n\n/// Proxima Nova\n@font-face {\n  font-family: 'Proxima Nova Regular';\n  src: local('Proxima Nova Regular'),\n    url('#{$fonts}Proxima-Nova/Proxima-Nova-Regular.woff2') format('woff2'),\n    url('#{$fonts}Proxima-Nova/Proxima-Nova-Regular.woff') format('woff'),\n    url('#{$fonts}Proxima-Nova/Proxima-Nova-Regular.ttf') format('truetype'),\n    url('#{$fonts}Proxima-Nova/Proxima-Nova-Regular.eot') format('embedded-opentype');\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n}\n\n\n@font-face {\n  font-family: 'Proxima Nova Condensed Bold';\n  src: local('Proxima Nova Condensed Bold'),\n    url('#{$fonts}Proxima-Nova/Proxima-Nova-Condensed-Bold.woff2') format('woff2'),\n    url('#{$fonts}Proxima-Nova/Proxima-Nova-Condensed-Bold.woff') format('woff'),\n    url('#{$fonts}Proxima-Nova/Proxima-Nova-Condensed-Bold.ttf') format('truetype'),\n    url('#{$fonts}Proxima-Nova/Proxima-Nova-Condensed-Bold.eot') format('embedded-opentype');\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n}\n","//\n// Mixins\n\n/// Breakpoints\n/// Mayor que $bp\n@mixin from($bp) {\n  @media screen and (min-width: $bp) {\n    @content;\n  }\n}\n\n/// Menor que $bp\n@mixin to($bp) {\n  @media screen and (max-width: $bp) {\n    @content;\n  }\n}\n\n/// Dimensiones\n/// Alto y ancho\n@mixin size($width : auto, $height : auto) {\n  width: $width;\n  height: $height;\n}\n\n/// Mismas dimensiones\n@mixin esize($size) {\n  @include size($size, $size);\n}\n\n/// Font\n/// Text\n@mixin text($fontsize: var(--base-font-size), $lineheight: false, $fontfamily: $proximaNova) {\n  font-family: $fontfamily;\n  font-size: $fontsize;\n\n  @if $lineheight {\n    line-height: $lineheight;\n  } @else {\n    line-height: $fontsize;\n  }\n}\n\n/// Form controls\n/// Inpputs\n@mixin form-control-base($height, $fontsize, $padding) {\n  @include size(100%, $height);\n  appearance: none;\n  border: 0;\n  border-radius: $border-radius1;\n  color: $color2;\n  display: block;\n  font-size: $fontsize;\n  padding: $padding;\n  outline: none;\n\n  &::placeholder {\n    color: $color4;\n  }\n\n  &::-moz-placeholder {\n    color: $color4;\n  }\n\n  &::-ms-placeholder {\n    color: $color4;\n  }\n}\n\n/// Buttons\n@mixin btn-base {\n  appearance: none;\n  align-items: center;\n  border: 0;\n  border-radius: $border-radius1;\n  cursor: pointer;\n  display: flex;\n  font-size: inherit;\n  justify-content: center;\n  text-align: center;\n}\n\n@mixin btn-variant($background, $color, $border) {\n  background-color: $background;\n  color: $color;\n  border-color: $color;\n  fill: $color;\n\n  &:hover {\n    background-color: darken($background, 10%);\n    border-color: darken($border, 12%);\n    color: $color;\n  }\n}\n\n/// Accesibility\n/// Hide content\n@mixin visually-hidden {\n  position: absolute !important;\n  padding: 0!important;\n  margin: -1px!important;\n  overflow: hidden!important;\n  clip: rect(0,0,0,0)!important;\n  white-space: nowrap!important;\n  border: 0!important;\n}\n","//\n// General styles.\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody,\nhtml {\n  min-height: 100vh;\n  min-width: 100%;\n}\n\n.root {\n  min-height: calc(100vh - 54px);\n  min-width: 100%;\n}\n\nbody {\n  background: $color5;\n  color: $color2;\n  font-family: $proximaNova;\n  font-size: var(--base-font-size);\n  line-height: 22px;\n}\n\n.container {\n  @include size(100%);\n  margin: 0 auto;\n  max-width: $max-width;\n}\n\n.img_responsive {\n  @include size(100%);\n  max-width: 100%;\n}\n\nul,\nol {\n  list-style: none;\n}\n\na {\n  text-decoration: none\n}\n\n.visually-hidden {\n  @include visually-hidden;\n}\n",".header {\n  background-color: $color1;\n\n  &__container {\n    padding: $space1 0;\n\n    @include from($sm-start) {\n      padding: 10px 0;\n    }\n  }\n\n  &__brand-logo {\n    display: flex;\n\n    img {\n      @include size(auto, 32px);\n\n      @include from($sm-start) {\n        height: 40px;\n      }\n    }\n  }\n}\n","///\n/// Main element\n.main {\n  margin-bottom: $space1;\n  padding-top: $space1;\n\n  &.home-page {\n    padding-top: 100px;\n    text-align: center;\n  }\n\n  .main__wrapper {\n    background-color: $white;\n    border-radius: $border-radius1;\n  }\n}\n\n","//\n// Config here all sass variables\n\n// Paths\n$images-path : '../../assets/images';\n\n// COLORS\n$white  : #FFFFFF;\n$black  : #000000;\n$color1 : #FFE600;\n$color2 : #333333;\n$color3 : #666666;\n$color4 : #999999;\n$color5 : #EEEEEE;\n$color6 : #3483FA;\n\n// Fonts\n$proximaNova        : 'Proxima Nova Regular', arial, sans-serif, helvetica;\n$proximaNovaBold    : 'Proxima Nova Condensed Bold', $proximaNova;\n\n// Layout\n$gap        : 22px;\n$space1     : 16px;\n$space2     : 32px;\n$max-width  : 1200px;\n\n$border-radius1:  4px;\n\n// Grid system\n// The grid system is config in src/assets/libraries/sass-flexbox-grid/variables/grid-variables\n\n\n:root {\n  --base-font-size: 14px;\n\n  @media screen and (min-width: $sm-start) {\n    --base-font-size: 16px;\n  }\n}\n","// Input text\ninput[type=\"text\"] {\n  @include form-control-base(32px, szrem(14), 10px);\n\n  @include from($sm-start) {\n    height: 40px;\n    font-size: szrem(18);\n    padding: 10px 15px;\n  }\n}\n","//\n// Buttons\n\n// Base class\n.btn {\n  @include btn-base;\n}\n\n// Primary button\n.btn-primary {\n  @include btn-variant($color6, $white, $color6);\n  font-size: var(--base-font-size);\n  height: 35px;\n  max-width: 320px;\n\n  @include from($sm-start) {\n    height: 40px;\n  }\n}\n\n// Button with icon\n.btn-icon {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n}\n","///\n/// Only forms\n\n// Form search\n.form-search {\n  position: relative;\n\n  &__submit {\n    @include esize(32px);\n    background-color: $color5;\n    border-bottom-left-radius: 0;\n    border-top-left-radius: 0;\n    position: absolute;\n    right: $gutter;\n    top: 0;\n\n    @include from($sm-start) {\n      @include esize(40px);\n\n      svg {\n        @include esize(18px);\n      }\n    }\n  }\n}\n","/// Slick slider\n/// Internal page od product details\n.product-details__slider {\n  .slick-slide {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    img {\n      width: 100%;\n      object-fit: contain;\n      object-position: center;\n    }\n  }\n}\n",".breadcrumb {\n  margin-bottom: $space1;\n\n  &__list {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  &__item {\n    display: flex;\n    align-items: center;\n    color: $color4;\n\n    svg {\n      margin: 0 5px;\n    }\n\n    &:last-child {\n      font-family: $proximaNovaBold;\n    }\n  }\n}\n","///\n/// Skeleton\n.results-mobile {\n  .rect-img {\n    width: 100%;\n  }\n}\n\n\n.product-detail {\n  &.skeleton svg {\n    width: 100%;\n  }\n}\n",".author {\n  margin: $space1 0;\n  color: $color4;\n}\n","///\n/// Search list items\n.search-items {\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  .item {\n    padding: $space1;\n    border-bottom: 2px solid $color5;\n\n    &:last-child {\n      border-bottom: 0;\n    }\n\n    .search-items {\n      width: 100%;\n    }\n\n    &__image {\n      @include esize(180px);\n      background-color: $white;\n      border-radius: $border-radius1;\n      justify-content: center;\n      margin-right: 8px;\n\n      img {\n        @include esize(180px);\n        display: flex;\n        object-fit: contain;\n      }\n    }\n\n    &__description {\n      position: relative;\n      padding-top: 20px;\n\n      .price {\n        font-size: szrem(24);\n\n        @include from($sm-start) {\n          margin-bottom: $space2;\n        }\n\n        &.free-shipping::after {\n          @include esize(20px);\n          background: bg-icon(shipping, center/20px, png);\n          content: '';\n          display: inline-block;\n          margin-left: $space1;\n        }\n      }\n\n      .title {\n        @include text(szrem(18), szrem(22));\n        font-weight: normal;\n\n        @include from($sm-start) {\n          width: 80%;\n        }\n      }\n\n      .location {\n        font-size: szrem(12);\n        margin: $space1 0;\n\n        @include from($sm-start) {\n          margin: 0;\n          position: absolute;\n          right: 10%;\n          top: 30px;\n        }\n      }\n    }\n  }\n}\n"]}